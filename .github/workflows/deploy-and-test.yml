name: Build -> Deploy -> Integration Tests

permissions:
  checks: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build_and_deploy:
    runs-on: ubuntu-latest  # Specify the runner environment

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # Set up Docker (Optional if you don't have Docker already in your environment)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build Docker image from the Dockerfile in the repo
      - name: Build Docker image
        run: |
          docker build -t rkukharuk-to-hire-app .

      # Run Docker container (your app) in detached mode
      - name: Run Docker container
        run: |
          docker run -d -p 8080:8080 --name rkukharuk-to-hire-container rkukharuk-to-hire-app .
      

      # Wait for the container to be ready (check health endpoint)
      - name: Wait for container to be ready
        run: |
          for i in {1..30}; do  # Try for 30 seconds
            if curl --silent --fail http://localhost:8080/actuator/health; then
              echo "Container is ready!";
              exit 0;
            else
              echo "Waiting for container to be ready...";
              sleep 2;
            fi
          done
          echo "Timeout waiting for container to be ready";
          exit 1

      # Run Gradle integration tests against the deployed container
      - name: Run Gradle integration tests
        run: |
          # Run Gradle integration tests against the deployed container
          ./gradlew testE2E

      # Optionally, stop and remove the container after tests
      - name: Stop and remove Docker container
        run: |
          docker stop rkukharuk-to-hire-container
          docker rm rkukharuk-to-hire-container

      - name: Publish Unit Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'build/test-results/test/TEST-*.xml'
          include_passed: true

      - name: Publish e2e Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'build/test-results/testE2E/TEST-*.xml'
          include_passed: true
